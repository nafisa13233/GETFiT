@model GETFiT.Areas.Admin.Models.TrainerEditViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Trainer/Views/Shared/_IndexLayout.cshtml";
}



<div class="container">
    <div class="row justify-content-center">
        <div class="col-10 col-md-7 col-sm-12 mt-3  ">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Edit Trainer Profile</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.id)

                    @if (TempData["Success"] != null)
                    {
                        <div class="alert alert-success col-md-10" role="alert">
                            @TempData["Success"]
                        </div>
                    }

                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group ">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-5" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Gender, ViewBag.Gender as SelectList, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    

                    <div class="form-group">
                        @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Qualification, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Qualification, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Qualification, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Speciality, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Speciality, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Speciality, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="row">
                            <div class="col-md-offset-2 col-md-5 mt-1">
                                <button type="submit" value="Save" class="btn btn-success btn-block"><i class="fas fa-save"></i>  Save</button>
                            </div>
                            <div class="col-md-offset-2 col-md-5 mt-1">
                                @Html.ActionLink("Back", "UserProfile", "DoctorAccount", new { area = "Doctor" }, new { @class = " btn btn-block btn-primary" })
                            </div>

                        </div>

                    </div>

                    @*<div class="form-group">

                            <div class="col-md-offset-2 col-md-10">
                                <div class="row ">
                                    <button type="submit" value="Save" class="btn btn-success col-md-offset-2 col-md-4"><i class="fas fa-save"></i>  Save</button>
                                    @Html.ActionLink("Doctors List", "Doctors", "Home", new { area = "Admin" }, new { @class = "col-md-offset-2 col-md-4 btn  btn-primary" })

                                </div>
                            </div>


                        </div>*@

                </div>
            }
        </div>
    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="~/Content/jquery-ui-1.12.1/jquery-ui-1.12.1/jquery-ui.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/timepicker@1.13.14/jquery.timepicker.js"></script>
    <script>

        /* Set the width of the side navigation to 250px */
        function openNav() {
            document.getElementById("mySidenav").style.width = "300px";
        }

        /* Set the width of the side navigation to 0 */
        function closeNav() {
            document.getElementById("mySidenav").style.width = "0";
        }

        $(document).ready(function () {
            var i = 0;
            /*$("#Email").hover(() => {
                var f = $("<input/>").attr('type', 'textbox').attr('name', 'test[' + i + "]");
                f.val("kireeee");

                $("#form-0").append(f);
                i++;
            });*/
            $('#DateOfBirth').datepicker({
                dateFormat: 'dd-MM-yy'
            });

            $('#StartTime').timepicker({ 'timeFormat': 'h:i A', 'scrollDefault': 'now' });
            $('#EndTime').timepicker({ 'timeFormat': 'h:i A', 'scrollDefault': 'now' });
        });

    </script>
}



